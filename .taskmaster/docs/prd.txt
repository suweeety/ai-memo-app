# 📝 PRD: **Memora** – AI 음성 메모장 웹서비스

---

## Overview

**Memora**는 AI 기반 웹 메모 애플리케이션으로, 사용자의 음성 또는 텍스트 입력을 받아 AI가 자동으로 요약 및 분류해주는 기능을 제공합니다. STT(Speech-to-Text) 기술을 통해 빠른 음성 메모 작성이 가능하며, 모든 데이터는 웹 애플리케이션의 데이터베이스에 저장됩니다.

### 문제 해결
기존 메모 서비스는 사용자의 메모를 단순 저장하는 데 그치는 경우가 많아, 시간이 지날수록 중요한 정보를 찾기 어렵고 효율적인 활용이 어려워집니다. 특히 회의록, 아이디어, 공부 내용 등 다양한 형태의 메모를 빠르게 작성하고 구조화하는 것이 점점 더 중요해지고 있습니다.

### 대상 사용자
- **직장인/프리랜서**: 회의나 작업 중 웹에서 빠르게 메모하고, 자동 정리되길 원함
- **대학생**: 노트북을 통해 수업 내용을 음성/텍스트로 기록하고 정리하길 원함
- **일반 사용자**: 웹에서 손쉽게 일상 메모를 작성하고 필요할 때 검색하길 원함

### 제공 가치
- **AI 요약**: 긴 메모를 간결한 핵심 요약으로 제공
- **카테고리 분류**: 자동 분류 기능을 통한 체계적인 메모 정리
- **STT 기반 음성 입력**: 빠른 음성 기반 메모 작성 가능
- **웹 접근성**: 설치 없이 브라우저에서 사용 가능

---

## Core Features

### 1. 텍스트 메모 작성
- **기능**: 사용자가 직접 웹에서 텍스트 입력
- **중요성**: 기본적인 메모 작성 기능으로 모든 사용자가 활용 가능
- **작동 방식**: React 기반 텍스트 에디터 컴포넌트

### 2. 음성 입력 (STT 변환)
- **기능**: 마이크 입력을 실시간 텍스트로 변환
- **중요성**: 빠른 메모 작성과 접근성 향상
- **작동 방식**: Web Speech API 또는 외부 STT 서비스 연동

### 3. AI 요약
- **기능**: 긴 메모 내용을 간결하게 요약
- **중요성**: 핵심 정보 빠른 파악과 메모 효율성 증대
- **작동 방식**: OpenAI API 또는 유사 AI 서비스 활용

### 4. 자동 카테고리 분류
- **기능**: 메모 내용을 주제 기반으로 자동 분류
- **중요성**: 체계적인 메모 관리와 검색 효율성
- **작동 방식**: AI 기반 텍스트 분석 및 태그 생성

### 5. 검색 기능
- **기능**: 키워드, 작성일, 카테고리별 검색 가능
- **중요성**: 저장된 메모의 빠른 검색과 접근
- **작동 방식**: 데이터베이스 인덱싱 및 필터링

### 6. 데이터베이스 저장
- **기능**: 모든 메모는 서버의 DB에 저장
- **중요성**: 데이터 영속성과 백업 보장
- **작동 방식**: PostgreSQL 또는 MongoDB 활용

---

## User Experience

### 사용자 페르소나

#### 1. 직장인 (김영수, 32세)
- **목표**: 회의 중 빠른 메모 작성과 후속 작업 정리
- **페인포인트**: 긴 회의 내용을 나중에 정리하는 시간 부족
- **사용 시나리오**: 회의 중 음성으로 메모 → AI 요약 확인 → 카테고리별 정리

#### 2. 대학생 (이미영, 20세)
- **목표**: 수업 내용 기록과 시험 준비
- **페인포인트**: 필기 속도가 느려 중요한 내용 놓침
- **사용 시나리오**: 수업 중 음성 녹음 → 텍스트 변환 → AI 요약으로 핵심 정리

#### 3. 일반 사용자 (박철수, 45세)
- **목표**: 일상 메모와 아이디어 기록
- **페인포인트**: 메모를 찾기 어렵고 정리가 안됨
- **사용 시나리오**: 아이디어 음성 메모 → 자동 분류 → 필요시 검색

### 핵심 사용자 플로우

#### 시나리오: 웹에서 회의 내용을 음성으로 메모
1. 사용자가 웹 앱 실행 → 로그인
2. '새 메모' 버튼 클릭 → 음성 녹음 시작
3. STT 기술로 실시간 텍스트 변환
4. 메모 저장 시, 자동으로 AI 요약 및 카테고리 분류
5. 전체 메모와 요약본이 웹 화면에 동시 표시
6. 데이터는 자체 데이터베이스에 저장되어 웹에서 언제든지 확인 가능

### UI/UX 고려사항
- **반응형 디자인**: 모바일, 태블릿, 데스크톱 지원
- **직관적 인터페이스**: 최소한의 클릭으로 메모 작성
- **실시간 피드백**: STT 변환 과정의 실시간 표시
- **접근성**: 키보드 네비게이션과 스크린 리더 지원

---

## Technical Architecture

### 시스템 컴포넌트

#### Frontend (React.js)
- **메모 작성 컴포넌트**: 텍스트 에디터, 음성 녹음 인터페이스
- **메모 목록 컴포넌트**: 카드 형태의 메모 표시
- **검색 컴포넌트**: 필터링 및 검색 기능
- **통계 대시보드**: 사용 패턴 분석

#### Backend (Node.js/Express)
- **API 서버**: RESTful API 엔드포인트
- **인증 시스템**: JWT 기반 사용자 인증
- **파일 처리**: 음성 파일 업로드 및 처리
- **AI 통합**: OpenAI API 연동

#### Database (PostgreSQL)
- **사용자 테이블**: 사용자 정보 및 설정
- **메모 테이블**: 메모 내용, 메타데이터, AI 요약
- **카테고리 테이블**: 자동 생성된 카테고리 정보

### 데이터 모델

#### User
```sql
- id (UUID, Primary Key)
- email (VARCHAR, Unique)
- password_hash (VARCHAR)
- created_at (TIMESTAMP)
- updated_at (TIMESTAMP)
```

#### Memo
```sql
- id (UUID, Primary Key)
- user_id (UUID, Foreign Key)
- title (VARCHAR)
- content (TEXT)
- summary (TEXT) -- AI 요약
- category (VARCHAR) -- 자동 분류 카테고리
- audio_url (VARCHAR) -- 음성 파일 경로
- created_at (TIMESTAMP)
- updated_at (TIMESTAMP)
```

### API 및 통합

#### 외부 API
- **OpenAI API**: 텍스트 요약 및 카테고리 분류
- **Web Speech API**: 브라우저 내장 STT (대안)
- **Google Cloud Speech-to-Text**: 고품질 STT 서비스

#### 내부 API 엔드포인트
- `POST /api/memos`: 새 메모 생성
- `GET /api/memos`: 메모 목록 조회
- `PUT /api/memos/:id`: 메모 수정
- `DELETE /api/memos/:id`: 메모 삭제
- `POST /api/memos/:id/summarize`: AI 요약 생성

### 인프라 요구사항
- **웹 서버**: Vercel 또는 AWS EC2
- **데이터베이스**: PostgreSQL (Supabase 또는 AWS RDS)
- **파일 스토리지**: AWS S3 또는 Cloudinary
- **CDN**: Cloudflare 또는 AWS CloudFront

---

## Development Roadmap

### Phase 1: MVP (핵심 기능)
**목표**: 기본적인 메모 작성과 AI 요약 기능 구현

#### 기능 범위
- 사용자 인증 시스템 (회원가입/로그인)
- 텍스트 메모 작성 및 저장
- 기본적인 AI 요약 기능 (OpenAI API 연동)
- 간단한 카테고리 분류
- 메모 목록 조회 및 검색
- 반응형 웹 디자인

#### 기술 스택
- Frontend: React.js, Tailwind CSS
- Backend: Node.js, Express
- Database: PostgreSQL
- AI: OpenAI API

### Phase 2: 음성 입력 및 고도화
**목표**: STT 기능 추가 및 AI 기능 강화

#### 기능 범위
- Web Speech API를 활용한 음성 입력
- 실시간 STT 변환 표시
- 고급 AI 요약 (핵심 포인트 추출)
- 정교한 카테고리 분류 시스템
- 메모 편집 및 수정 기능
- 사용자 설정 (테마, 언어 등)

#### 기술 추가
- Web Speech API 통합
- 고급 AI 모델 활용
- 실시간 데이터 처리

### Phase 3: 고급 기능 및 최적화
**목표**: 사용자 경험 향상 및 성능 최적화

#### 기능 범위
- 고급 검색 기능 (전문 검색, 필터링)
- 사용자 통계 및 분석 대시보드
- 메모 공유 및 협업 기능
- 오프라인 지원 (PWA)
- 다국어 지원
- 고급 보안 기능

#### 기술 추가
- Elasticsearch (검색 엔진)
- Redis (캐싱)
- PWA 구현
- 다국어 지원 시스템

---

## Logical Dependency Chain

### 1단계: 기반 시스템 구축 (우선순위: 최고)
- **사용자 인증 시스템**: 모든 기능의 기반
- **데이터베이스 설계**: 메모 저장 구조 확립
- **기본 API 서버**: CRUD 작업을 위한 백엔드

### 2단계: 핵심 메모 기능 (우선순위: 높음)
- **텍스트 메모 작성**: 가장 기본적인 기능
- **메모 목록 조회**: 사용자가 작성한 메모 확인
- **기본 검색**: 키워드 기반 검색

### 3단계: AI 기능 통합 (우선순위: 높음)
- **AI 요약 기능**: OpenAI API 연동
- **카테고리 분류**: AI 기반 자동 분류
- **요약 결과 표시**: UI에 AI 결과 통합

### 4단계: 음성 입력 시스템 (우선순위: 중간)
- **STT 통합**: Web Speech API 또는 외부 서비스
- **음성 녹음 UI**: 사용자 친화적 인터페이스
- **실시간 변환**: 녹음 중 텍스트 표시

### 5단계: 고급 기능 (우선순위: 낮음)
- **통계 대시보드**: 사용 패턴 분석
- **고급 검색**: 필터링 및 정렬
- **사용자 설정**: 개인화 옵션

### MVP 정의
**최소 실행 가능 제품**: 사용자가 웹에서 텍스트로 메모를 작성하고, AI가 자동으로 요약해주는 기능이 완전히 작동하는 상태

---

## Risks and Mitigations

### 기술적 도전 과제

#### 1. STT 정확도 문제
- **위험**: 음성 인식 정확도가 낮을 경우 사용자 경험 저하
- **완화 방안**: 
  - Web Speech API와 외부 STT 서비스 병행 사용
  - 사용자에게 텍스트 편집 기능 제공
  - 음성 품질 개선 가이드 제공

#### 2. AI API 비용 및 속도
- **위험**: OpenAI API 호출 비용 증가 및 응답 지연
- **완화 방안**:
  - 요약 길이 제한 및 캐싱 구현
  - 대안 AI 서비스 준비 (Claude, Gemini)
  - 사용량 기반 요금제 도입

#### 3. 데이터 보안 및 개인정보
- **위험**: 음성 데이터 및 개인 메모 정보 유출
- **완화 방안**:
  - 데이터 암호화 저장
  - GDPR 준수 개인정보 처리
  - 정기적인 보안 감사

### MVP 범위 조정

#### 핵심 기능 우선순위
1. **텍스트 메모 작성**: 가장 기본적이고 안정적인 기능
2. **AI 요약**: 차별화 요소이지만 복잡도 높음
3. **음성 입력**: 사용자 편의성 증대이지만 기술적 위험 존재

#### 단계적 접근
- Phase 1에서 텍스트 메모만으로 시작
- AI 요약 기능을 안정화 후 음성 입력 추가
- 각 단계별 사용자 피드백 수집

### 리소스 제약

#### 개발 인력
- **위험**: 단일 개발자로 인한 개발 속도 제한
- **완화 방안**: 우선순위 기반 단계적 개발
- **대안**: 오픈소스 라이브러리 최대 활용

#### 인프라 비용
- **위험**: AI API 및 서버 비용 증가
- **완화 방안**: 사용량 기반 스케일링
- **대안**: 무료 티어 활용 및 최적화

---

## Appendix

### 연구 결과

#### STT 기술 비교
- **Web Speech API**: 무료, 브라우저 내장, 정확도 보통
- **Google Cloud Speech-to-Text**: 유료, 높은 정확도, 다국어 지원
- **Azure Speech Services**: 유료, 엔터프라이즈급, 고급 기능

#### AI 요약 기술
- **OpenAI GPT**: 높은 품질, 비용 중간
- **Claude**: 안정적, 비용 효율적
- **로컬 모델**: 비용 없음, 성능 제한적

### 기술 명세

#### 성능 요구사항
- **페이지 로딩 시간**: 3초 이내
- **AI 요약 응답 시간**: 10초 이내
- **음성 인식 정확도**: 90% 이상
- **동시 사용자**: 100명 이상

#### 보안 요구사항
- **데이터 암호화**: AES-256
- **인증**: JWT 토큰 기반
- **HTTPS**: 모든 통신 암호화
- **데이터 백업**: 일일 자동 백업

### 시장 분석

#### 경쟁 제품
- **Notion**: 강력하지만 복잡함
- **Evernote**: 안정적이지만 구식
- **Apple Notes**: 간단하지만 플랫폼 제한

#### 차별화 포인트
- **AI 자동 요약**: 경쟁 제품 대비 우위
- **음성 입력**: 빠른 메모 작성
- **웹 기반**: 플랫폼 독립적
- **한국어 최적화**: 국내 사용자 친화적

---

## ✅ 결론 및 향후 과제

Memora는 브라우저 기반에서 음성과 텍스트로 빠르게 메모하고, AI가 자동으로 요약 및 분류해주는 웹 메모장입니다. 

**초기 버전에서는 핵심 기능인 텍스트 메모 작성과 AI 요약에 집중**하고, 사용자 피드백을 바탕으로 음성 입력, 고급 검색, 통계 기능을 순차적으로 확장할 예정입니다.

**성공 지표**: 월간 활성 사용자 1,000명, 메모 작성 완료율 80% 이상, 사용자 만족도 4.5/5.0 이상을 목표로 합니다.